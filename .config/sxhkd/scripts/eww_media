#!/usr/bin/env bash
set -uo pipefail

if [ -p /tmp/vol ] && [ -p /tmp/vol-icon ]; then
    true
else
    mkfifo /tmp/vol && echo "$(pulsemixer --get-volume | awk '{print $1}')" > /tmp/vol 
    mkfifo /tmp/vol-icon && ~/.config/sxhkd/scripts/eww_vol_icon
fi

current_player=$(playerctl status)
script_name="eww_vol"
for pid in $(pgrep -f $script_name); do
    if [ $pid != $$ ]; then
        kill -9 $pid
    fi 
done

start=$SECONDS
value=2

volume_wid="$(xdotool search --name 'Eww - volume' || true)"
player_wid="$(xdotool search --name 'Eww - player' || true)"

if [ ! -n "$volume_wid" ] && [ ! -n "$player_wid" ]; then
    eww open volume
    if [ -n "$current_player" ]; then
        eww open player
    fi
    player_wid="$(xdotool search --name 'Eww - player' || true)"
    volume_wid="$(xdotool search --name 'Eww - volume' || true)"
fi

case $1 in
    up)
        currentVolume=$(pulsemixer --get-volume | awk '{print $1}')
            if [[ "$currentVolume" -ge "100" ]]; then
                pulsemixer --max-volume 100
            else
                pulsemixer --change-volume +"$value"
            fi
    ;;
    down)
        pulsemixer --change-volume -"$value"
    ;;
    mute)
        pulsemixer --toggle-mute
    ;;
    play-pause)
        playerctl $1
    ;;
    next)
        playerctl $1
    ;;
    previous)
        playerctl $1
    ;;
esac

echo $(pulsemixer --get-volume | awk '{print $1}') > /tmp/vol 
~/.config/sxhkd/scripts/eww_vol_icon

while [ -n "$volume_wid" ]; do
    duration=$(( SECONDS - start ))
    if [[ $duration -gt 2 ]]; then
        eww close volume
        if [ -n "$current_player" ]; then

            eww close player
        fi
        player_wid="$(xdotool search --name 'Eww - player' || true)"
        volume_wid="$(xdotool search --name 'Eww - volume' || true)"       
    fi
    sleep 0.3
done
